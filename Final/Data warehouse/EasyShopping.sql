-- CUSTOMER Dimension
CREATE TABLE easydw.customer
(customer_id
varchar2(10),
city
varchar2(15),
state
varchar2(10),
postal_code
varchar2(10),
gender
varchar2(1),
region
varchar2(15),
country
varchar2(20),
tax_rate
number,
occupation
varchar2(15))
PCTFREE 0 PCTUSED 99
TABLESPACE easy_dim
STORAGE (INITIAL 16k NEXT 16k PCTINCREASE 0) ;

ALTER TABLE customer
ADD CONSTRAINT pk_customer PRIMARY KEY (customer_id)
USING INDEX
PCTFREE 5
TABLESPACE indx
STORAGE (INITIAL 16k NEXT 16k PCTINCREASE 0) ;

-- PRODUCT Dimension
CREATE TABLE easydw.product
(    PRODUCT_ID NUMBER (6)  NOT NULL , 
     PROD_NAME VARCHAR2 (50 BYTE)  NOT NULL , 
     PROD_DESC VARCHAR2 (4000 BYTE)  NOT NULL , 
     PROD_SUBCATEGORY VARCHAR2 (50 BYTE)  NOT NULL , 
     PROD_SUBCATEGORY_ID NUMBER  NOT NULL , 
     PROD_SUBCATEGORY_DESC VARCHAR2 (2000 BYTE)  NOT NULL , 
     PROD_CATEGORY VARCHAR2 (50 BYTE)  NOT NULL , 
     PROD_CATEGORY_ID NUMBER  NOT NULL , 
     PROD_CATEGORY_DESC VARCHAR2 (2000 BYTE)  NOT NULL , 
     PROD_WEIGHT_CLASS NUMBER (3)  NOT NULL , 
     PROD_UNIT_OF_MEASURE VARCHAR2 (20 BYTE) , 
     PROD_PACK_SIZE VARCHAR2 (30 BYTE)  NOT NULL , 
     SUPPLIER_ID NUMBER (6)  NOT NULL , 
     PROD_STATUS VARCHAR2 (20 BYTE)  NOT NULL , 
     PROD_LIST_PRICE NUMBER (8,2)  NOT NULL , 
     PROD_MIN_PRICE NUMBER (8,2)  NOT NULL , 
     PROD_TOTAL VARCHAR2 (13 BYTE)  NOT NULL , 
     PROD_TOTAL_ID NUMBER  NOT NULL , 
     PROD_SRC_ID NUMBER , 
     PROD_EFF_FROM DATE , 
     PROD_EFF_TO DATE , 
     PROD_VALID VARCHAR2 (1 BYTE))
PCTFREE 0 PCTUSED 99
TABLESPACE easy_dim
STORAGE (INITIAL 16k NEXT 16k PCTINCREASE 0) ;
ALTER TABLE product
ADD CONSTRAINT pk_product PRIMARY KEY (product_id)
USING INDEX
PCTFREE 5 TABLESPACE easy_idx
STORAGE (INITIAL 16k NEXT 16k PCTINCREASE 0) ;
CREATE DIMENSION PRODUCTS_DIM 
    LEVEL CATEGORY IS PRODUCTS.PROD_CATEGORY_ID 
    LEVEL SUBCATEGORY IS PRODUCTS.PROD_SUBCATEGORY_ID 
    LEVEL PRODUCT IS PRODUCTS.PROD_ID 
    LEVEL PROD_TOTAL IS PRODUCTS.PROD_TOTAL_ID 
    HIERARCHY PROD_ROLLUP ( 
        PRODUCT  CHILD OF  
        SUBCATEGORY  CHILD OF  
        CATEGORY  CHILD OF  
        PROD_TOTAL 
    ) 
    ATTRIBUTE Attr12 LEVEL CATEGORY DETERMINES ( 
        PROD_CATEGORY , 
        PROD_CATEGORY_DESC 
    ) 
    ATTRIBUTE Attr13 LEVEL SUBCATEGORY DETERMINES ( 
        PROD_SUBCATEGORY , 
        PROD_SUBCATEGORY_DESC 
    ) 
    ATTRIBUTE Attr14 LEVEL PRODUCT DETERMINES ( 
        PROD_NAME , 
        PROD_MIN_PRICE , 
        PROD_LIST_PRICE , 
        PROD_STATUS , 
        PROD_PACK_SIZE , 
        PROD_UNIT_OF_MEASURE , 
        PROD_WEIGHT_CLASS , 
        PROD_DESC 
    ) 
    ATTRIBUTE Attr15 LEVEL PROD_TOTAL DETERMINES 
        PROD_TOTAL 
    ATTRIBUTE Attr16 LEVEL CATEGORY DETERMINES 
        PROMO_CATEGORY 
    ATTRIBUTE Attr19 LEVEL SUBCATEGORY DETERMINES 
        PROMO_SUBCATEGORY 
;


-- TIME Dimension
CREATE TABLE easydw.time
(time_key DATE,
DAY_NAME VARCHAR2 (9 BYTE)  NOT NULL , 
     DAY_NUMBER_IN_WEEK NUMBER (1)  NOT NULL , 
     DAY_NUMBER_IN_MONTH NUMBER (2)  NOT NULL , 
     CALENDAR_WEEK_NUMBER NUMBER (2)  NOT NULL , 
     FISCAL_WEEK_NUMBER NUMBER (2)  NOT NULL , 
     WEEK_ENDING_DAY DATE  NOT NULL , 
     WEEK_ENDING_DAY_ID NUMBER  NOT NULL , 
     CALENDAR_MONTH_NUMBER NUMBER (2)  NOT NULL , 
     FISCAL_MONTH_NUMBER NUMBER (2)  NOT NULL , 
     CALENDAR_MONTH_DESC VARCHAR2 (8 BYTE)  NOT NULL , 
     CALENDAR_MONTH_ID NUMBER  NOT NULL , 
     FISCAL_MONTH_DESC VARCHAR2 (8 BYTE)  NOT NULL , 
     FISCAL_MONTH_ID NUMBER  NOT NULL , 
     DAYS_IN_CAL_MONTH NUMBER  NOT NULL , 
     DAYS_IN_FIS_MONTH NUMBER  NOT NULL , 
     END_OF_CAL_MONTH DATE  NOT NULL , 
     END_OF_FIS_MONTH DATE  NOT NULL , 
     CALENDAR_MONTH_NAME VARCHAR2 (9 BYTE)  NOT NULL , 
     FISCAL_MONTH_NAME VARCHAR2 (9 BYTE)  NOT NULL , 
     CALENDAR_QUARTER_DESC CHAR (7 BYTE)  NOT NULL , 
     CALENDAR_QUARTER_ID NUMBER  NOT NULL , 
     FISCAL_QUARTER_DESC CHAR (7 BYTE)  NOT NULL , 
     FISCAL_QUARTER_ID NUMBER  NOT NULL , 
     DAYS_IN_CAL_QUARTER NUMBER  NOT NULL , 
     DAYS_IN_FIS_QUARTER NUMBER  NOT NULL , 
     END_OF_CAL_QUARTER DATE  NOT NULL , 
     END_OF_FIS_QUARTER DATE  NOT NULL , 
     CALENDAR_QUARTER_NUMBER NUMBER (1)  NOT NULL , 
     FISCAL_QUARTER_NUMBER NUMBER (1)  NOT NULL , 
     CALENDAR_YEAR NUMBER (4)  NOT NULL , 
     CALENDAR_YEAR_ID NUMBER  NOT NULL , 
     FISCAL_YEAR NUMBER (4)  NOT NULL , 
     FISCAL_YEAR_ID NUMBER  NOT NULL , 
     DAYS_IN_CAL_YEAR NUMBER  NOT NULL , 
     DAYS_IN_FIS_YEAR NUMBER  NOT NULL , 
     END_OF_CAL_YEAR DATE  NOT NULL , 
     END_OF_FIS_YEAR DATE  NOT NULL
PCTFREE 0 PCTUSED 99
TABLESPACE easy_dim
STORAGE (INITIAL 16k NEXT
date,
number (6,0),
varchar2(10),
number (6,0),
number (4,0),
number (3,0),
varchar2(9),
number (2,0) )
16k PCTINCREASE 0) ;

CREATE DIMENSION TIMES_DIM 
    LEVEL QUARTER IS TIMES.CALENDAR_QUARTER_ID 
    LEVEL DAY IS TIMES.TIME_ID 
    LEVEL MONTH IS TIMES.CALENDAR_MONTH_ID 
    LEVEL FIS_YEAR IS TIMES.FISCAL_YEAR_ID 
    LEVEL YEAR IS TIMES.CALENDAR_YEAR_ID 
    LEVEL FIS_QUARTER IS TIMES.FISCAL_QUARTER_ID 
    LEVEL FIS_WEEK IS TIMES.WEEK_ENDING_DAY_ID 
    LEVEL FIS_MONTH IS TIMES.FISCAL_MONTH_ID 
    HIERARCHY CAL_ROLLUP ( 
        DAY  CHILD OF  
        MONTH  CHILD OF  
        QUARTER  CHILD OF  
        YEAR 
    ) 
    HIERARCHY FIS_ROLLUP ( 
        DAY  CHILD OF  
        FIS_WEEK  CHILD OF  
        FIS_MONTH  CHILD OF  
        FIS_QUARTER  CHILD OF  
        FIS_YEAR 
    ) 
    ATTRIBUTE Attr20 LEVEL QUARTER DETERMINES ( 
        CALENDAR_QUARTER_DESC , 
        END_OF_CAL_QUARTER , 
        DAYS_IN_CAL_QUARTER , 
        CALENDAR_QUARTER_NUMBER 
    ) 
    ATTRIBUTE Attr21 LEVEL DAY DETERMINES ( 
        DAY_NUMBER_IN_WEEK , 
        CALENDAR_WEEK_NUMBER , 
        DAY_NUMBER_IN_MONTH , 
        DAY_NAME 
    ) 
    ATTRIBUTE Attr22 LEVEL MONTH DETERMINES ( 
        CALENDAR_MONTH_DESC , 
        END_OF_CAL_MONTH , 
        DAYS_IN_CAL_MONTH , 
        CALENDAR_MONTH_NAME , 
        CALENDAR_MONTH_NUMBER 
    ) 
    ATTRIBUTE Attr23 LEVEL FIS_YEAR DETERMINES ( 
        FISCAL_YEAR , 
        END_OF_FIS_YEAR , 
        DAYS_IN_FIS_YEAR 
    ) 
    ATTRIBUTE Attr24 LEVEL YEAR DETERMINES ( 
        CALENDAR_YEAR , 
        END_OF_CAL_YEAR , 
        DAYS_IN_CAL_YEAR 
    ) 
    ATTRIBUTE Attr25 LEVEL FIS_QUARTER DETERMINES ( 
        FISCAL_QUARTER_DESC , 
        END_OF_FIS_QUARTER , 
        DAYS_IN_FIS_QUARTER , 
        FISCAL_QUARTER_NUMBER 
    ) 
    ATTRIBUTE Attr26 LEVEL FIS_WEEK DETERMINES ( 
        WEEK_ENDING_DAY , 
        FISCAL_WEEK_NUMBER 
    ) 
    ATTRIBUTE Attr27 LEVEL FIS_MONTH DETERMINES ( 
        FISCAL_MONTH_DESC , 
        END_OF_FIS_MONTH , 
        DAYS_IN_FIS_MONTH , 
        FISCAL_MONTH_NAME , 
        FISCAL_MONTH_NUMBER 
    ) 
;
ALTER TABLE time
ADD CONSTRAINT pk_time PRIMARY KEY (time_key)
USING INDEX
PCTFREE 5 TABLESPACE easy_idx
STORAGE (INITIAL 16k NEXT 16k PCTINCREASE 0) ;
-- TODAYS_SPECIAL_OFFERS Dimension
CREATE TABLE easydw.todays_special_offers
(product_id
varchar2(8),
offer_date
date,
special_price
number (6,2),
offer_price
number (6,2))
PCTFREE 0 PCTUSED 99
TABLESPACE easy_dim
STORAGE (INITIAL 16k NEXT 16k PCTINCREASE 0) ;

ALTER TABLE todays_special_offers
ADD CONSTRAINT pk_specials PRIMARY KEY
(offer_date,product_id )
USING INDEX
PCTFREE 5 TABLESPACE easy_idx
STORAGE (INITIAL 16k NEXT 16k PCTINCREASE 0) ;

-- Fact Table PURCHASES
CREATE TABLE easydw.purchases
(product_id
varchar2(8)
CONSTRAINT not_null_product_id NOT NULL
CONSTRAINT fk_product_id
REFERENCES product(product_id),
time_key
date
CONSTRAINT not_null_time NOT NULL
CONSTRAINT fk_time
REFERENCES time(time_key),
customer_id
varchar2(10)
CONSTRAINT not_null_customer_id NOT NULL
CONSTRAINT fk_customer_id
REFERENCES customer(customer_id),
ship_date
date,
purchase_price
number(6,2),
shipping_charge
number(5,2),
today_special_offer
varchar2(1)
CONSTRAINT special_offer
CHECK (today_special_offer IN ('Y','N')) )
PARTITION BY RANGE (time_key )
(
PARTITION purchases_jan2002
VALUES LESS THAN (TO_DATE('01-02-2002', 'DD-MM-YYYY'))
PCTFREE 0 PCTUSED 99
STORAGE (INITIAL 64k NEXT 16k PCTINCREASE 0)
TABLESPACE purchases_jan2002 ,
PARTITION purchases_feb2002
VALUES LESS THAN (TO_DATE('01-03-2002', 'DD-MM-YYYY'))
PCTFREE 0 PCTUSED 99
STORAGE (INITIAL 64k NEXT 16k PCTINCREASE 0)
TABLESPACE purchases_feb2002 ,
PARTITION purchases_mar2002
VALUES LESS THAN (TO_DATE('01-04-2002', 'DD-MM-YYYY'))
PCTFREE 0 PCTUSED 99
STORAGE (INITIAL 64k NEXT 16k PCTINCREASE 0)
TABLESPACE purchases_mar2002 );

-- Now create the indexes
-- Partition on the Time Key Local prefixed index
CREATE BITMAP INDEX easydw.purchase_time_index
ON purchases (time_key ) LOCAL
PCTFREE 5 TABLESPACE indx
STORAGE (INITIAL 64k NEXT 64k PCTINCREASE 0);
CREATE BITMAP INDEX easydw.purchase_product_index
ON purchases (product_id )
LOCAL
PCTFREE 5 TABLESPACE indx
STORAGE (INITIAL 64k NEXT 64k PCTINCREASE 0) ;
CREATE INDEX easydw.purchase_customer_index
ON purchases (customer_id )
LOCAL
PCTFREE 5 TABLESPACE indx
STORAGE (INITIAL 64k NEXT 64k PCTINCREASE 0) ;
CREATE BITMAP INDEX easydw.purchase_special_index
ON purchases (today_special_offer )
LOCAL
PCTFREE 5 TABLESPACE indx
STORAGE (INITIAL 64k NEXT 64k PCTINCREASE 0) ;




